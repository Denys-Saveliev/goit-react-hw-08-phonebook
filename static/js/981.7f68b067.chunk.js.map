{"version":3,"file":"static/js/981.7f68b067.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-08-phonebook/./src/components/contactForm/ContactForm.module.css?fd94","components/contactForm/ContactForm .jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import React from 'react';\nimport s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => (\n  <section className={s.container}>{children}</section>\n);\n\nexport default Container;\n\nContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Section_container__vEvWA\",\"title\":\"Section_title__SLHvV\"};","import React from 'react';\nimport s from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__ttXmo\",\"input\":\"ContactForm_input__e2U+9\",\"inputNameFocus\":\"ContactForm_inputNameFocus__pFsBV\",\"inputTelFocus\":\"ContactForm_inputTelFocus__4+ZoG\",\"btn\":\"ContactForm_btn__yDDxL\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport Notiflix from 'notiflix';\nimport s from './ContactForm.module.css';\nimport {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n} from 'redux/contacts/contactsApiSlice';\nimport { Loader } from 'components/Loader/Loader';\n\nconst warningNameValidation = () =>\n  Notiflix.Notify.failure(\n    \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  );\n\nconst warningNumberValidation = () =>\n  Notiflix.Notify.failure('Please type a valid Phone number!');\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/)\n    .required(),\n  number: yup\n    .string()\n    .matches(\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/\n    )\n    .required(),\n});\n\nconst initialValues = { name: '', number: '' };\n\nconst ContactForm = () => {\n  const { data } = useFetchContactsQuery();\n  const [createContact, { isLoading }] = useCreateContactMutation();\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (\n      data.find(\n        contact => contact.name.toLowerCase() === values.name.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.failure(`${values.name} is already in contacts`);\n      return;\n    }\n\n    createContact(values).then(() =>\n      Notiflix.Notify.success('Contact added to your phonebook!')\n    );\n    resetForm();\n  };\n\n  return (\n    <Formik\n      onSubmit={handleSubmit}\n      initialValues={initialValues}\n      validationSchema={schema}\n    >\n      <Form className={s.form} autoComplete=\"off\">\n        <Field placeholder=\"Name\" className={s.input} type=\"text\" name=\"name\" />\n        <span className={s.inputNameFocus}></span>\n        <ErrorMessage name=\"name\" render={warningNameValidation} />\n\n        <Field\n          placeholder=\"Phone number\"\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n        />\n        <span className={s.inputTelFocus}></span>\n        <ErrorMessage name=\"number\" render={warningNumberValidation} />\n\n        <button className={s.btn} type=\"submit\">\n          {isLoading ? <Loader /> : 'Add contact'}\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"inputFocusFilter\":\"Filter_inputFocusFilter__MiFeC\"};","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <input\n        className={s.input}\n        placeholder=\"Find contacts by name\"\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n      <span className={s.inputFocusFilter}></span>\n    </>\n  );\n};\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__UAAix\",\"itemContact\":\"ContactListItem_itemContact__Gri86\",\"btn\":\"ContactListItem_btn__Kdzd+\"};","import { useDeleteContactMutation } from 'redux/contacts/contactsApiSlice';\nimport Notiflix from 'notiflix';\nimport { Loader } from 'components/Loader/Loader';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  const handleDeleteContact = contactId =>\n    deleteContact(contactId).then(() =>\n      Notiflix.Notify.success('Contact successfully removed!')\n    );\n\n  return (\n    <li className={s.item}>\n      <div className={s.itemContact}>\n        <p>{name}:</p> <p>{number}</p>\n      </div>\n      <button className={s.btn} onClick={() => handleDeleteContact(id)}>\n        {isLoading ? <Loader /> : 'Delete'}\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <ContactListItem {...contact} key={contact.id} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n","import Container from '../components/Container';\nimport Section from '../components/Section';\nimport ContactForm from '../components/contactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\nimport { Loader } from '../components/Loader/Loader';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsApiSlice';\nimport { useState } from 'react';\n\nconst Contacts = () => {\n  const [filter, setfilter] = useState('');\n  const handleFilterChange = e => setfilter(e.target.value);\n  const { isLoading, data } = useFetchContactsQuery();\n\n  const showData = data?.length > 0;\n\n  return (\n    <Container>\n      <Section title=\"Create a new contact\">\n        <ContactForm />\n      </Section>\n      {isLoading && <Loader />}\n\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={handleFilterChange} />\n        {showData && (\n          <ContactList\n            contacts={data.filter(({ name }) =>\n              name.toLowerCase().includes(filter.toLowerCase())\n            )}\n          />\n        )}\n      </Section>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["children","className","s","title","warningNameValidation","Notiflix","warningNumberValidation","schema","yup","shape","name","matches","required","number","initialValues","data","useFetchContactsQuery","useCreateContactMutation","createContact","isLoading","onSubmit","values","resetForm","find","contact","toLowerCase","then","validationSchema","autoComplete","placeholder","type","render","Loader","value","onChange","ContactListItem","id","useDeleteContactMutation","deleteContact","onClick","contacts","map","key","useState","filter","setfilter","showData","length","e","target","includes"],"sourceRoot":""}